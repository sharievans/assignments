{"ts":1351304125105,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1351304993084,"patch":[[{"diffs":[[1,"Unit Testing\n```php\nWiki: A method by which individual units of source code, \nsets of one or more computer program modules together \nwith associated control data, usage procedures, and \noperating procedures, are tested to determine if they are fit for use.\n\nPros Wiki: The goal of unit testing is to isolate each part of the program \nand show that the individual parts are correct. A unit test provides a strict, \nwritten contract that the piece of code must satisfy. Find problems early, Facilitates change,\nSimplifies integration, Documentation, Design\n\nCons Wiki:  It is impossible to evaluate every execution path in all but the most trivial programs.\nIt only tests the functionality of the units themselves. \nTherefore, it will not catch integration errors or broader system-level errors \n(such as functions performed across multiple units, or non-functional test areas such as performance).\n\n```\n\nIntegration Testing\n```php\nWiki: Individual software modules are combined and tested as a group.\nThe purpose of integration testing is to verify functional, performance, \nand reliability requirements placed on major design items.\n```"]],"start1":0,"start2":0,"length1":0,"length2":1136}]],"length":1136,"saved":false}
{"ts":1351305703947,"patch":[[{"diffs":[[0,"e.\n\n"],[-1,"Pros Wiki: The goal of unit testing is to isolate each part of the program \nand show that the individual parts are correct. A unit test provides a strict, \nwritten contract that the piece of code must satisfy. Find problems early, Facilitates change,\nSimplifies integration, Documentation, Design"],[1,"http://msdn.microsoft.com/en-us/library/aa292197(v=vs.71).aspx:\nThe primary goal of unit testing is to take the smallest piece of \ntestable software in the application, isolate it from the remainder of the code, \nand determine whether it behaves exactly as you expect. Each unit is tested separately \nbefore integrating them into modules to test the interfaces between modules. Unit testing \nhas proven its value in that a large percentage of defects are identified during its use.\n\nPros Wiki: The goal of unit testing is to isolate each part of the program \nand show that the individual parts are correct. A unit test provides a strict, \nwritten contract that the piece of code must satisfy. Find problems early, Facilitates change,\nSimplifies integration, Documentation, Design\n\nPros http://www.alexbolboaca.ro/wordpress/articles/unit-testing-automatic-testing-tdd-pros-and-cons\nThe baseline value you can get from an application is people using it.\nCode doesn’t just work. No matter how smart your programmers are, they will miss something.\nIf the application crashes, people won’t be using it.\nIf the application doesn’t do what it’s supposed to, people won’t be using it."],[0,"\n\nCo"]],"start1":254,"start2":254,"length1":304,"length2":1184}]],"length":2016,"saved":false}
{"ts":1351305777779,"patch":[[{"diffs":[[0,"Unit Testing"],[1,"\n\nWiki definition"],[0,"\n```php\nWiki: A "]],"start1":0,"start2":0,"length1":28,"length2":45},{"diffs":[[0,"or use.\n"],[1,"```\n\n"],[0,"\nhttp://"]],"start1":266,"start2":266,"length1":16,"length2":21},{"diffs":[[0,"71).aspx"],[-1,":"],[1,"\n```php"],[0,"\nThe pri"]],"start1":334,"start2":334,"length1":17,"length2":23},{"diffs":[[0,"its use."],[1,"\n```"],[0,"\n\nPros W"]],"start1":759,"start2":759,"length1":16,"length2":20},{"diffs":[[0,"ros Wiki"],[-1,": "],[1,"\n```php\n"],[0,"The goal"]],"start1":774,"start2":774,"length1":18,"length2":24},{"diffs":[[0,", Design"],[-1,""],[0,""],[1,"\n```"],[0,"\n\nPros h"]],"start1":1067,"start2":1067,"length1":16,"length2":20}]],"length":2058,"saved":false}
{"ts":1351305819630,"patch":[[{"diffs":[[0,"nd-cons\n"],[1,"```php\n"],[0,"The base"]],"start1":1173,"start2":1173,"length1":16,"length2":23},{"diffs":[[0,"sing it."],[1,"\n```"],[0,"\n\nCons W"]],"start1":1475,"start2":1475,"length1":16,"length2":20},{"diffs":[[0,"Wiki"],[-1,":  "],[1,"\n```php\n"],[0,"It i"]],"start1":1494,"start2":1494,"length1":11,"length2":16}]],"length":2074,"saved":false}
{"ts":1351334703637,"patch":[[{"diffs":[[0,".\n\n```\n\n"],[1,"Cons http://stackoverflow.com/questions/64333/disadvantages-of-test-driven-development\n```php\n-Big time investment. For the simple case you lose about 20% of the actual implementation, \n  but for complicated cases you lose much more.\n  \n-Additional Complexity. For complex cases your test cases are harder to calculate, \n\n-I'd suggest in cases like that to try and use automatic reference code that will \nrun in parallel in the debug version / test run, instead of the unit test of simplest cases.\n\n-Design Impacts. Sometimes the design is not clear at the start and evolves as you go \nalong - this will force you to redo your test which will generate a big time lose. \n\nI would suggest postponing unit tests in this case until you have some grasp of the \ndesign in mind.\n\n-Continuous Tweaking. For data structures and black box algorithms unit tests would \nbe perfect, but for algorithms that tend to be changed, tweaked or fine tuned, \nthis can cause a big time investment that one might claim is not justified. \nSo use it when you think it actually fits the system and don't force the design to fit to TDD.\n```\n\n"],[0,"Integrat"]],"start1":1833,"start2":1833,"length1":16,"length2":1131}]],"length":3189,"saved":false}
{"ts":1351335780946,"patch":[[{"diffs":[[0,"D.\n```\n\n"],[1,"\nCons http://agilesoftwaredevelopment.com/node/597\n```php\nBasically says Unit Testing is a waste of time and that time is better invested in RSSChannels?\n```\n\n\n"],[0,"Integrat"]],"start1":2948,"start2":2948,"length1":16,"length2":176},{"diffs":[[0,"n items.\n```"],[1,"\n\nPros http://blog.infostretch.com/integration-testingtest-the-right-areas-and-discover-bugs-earlier\n```php\n-More stable than GUI tests\n-Useful in writing precise component level tests.\n-Drives better code design\n-Tester understands the internal workings of application allowing better writing of test cases\n-Easy to integrate in a continuous integration environment\n-Test the core of your application agnostic of UI.\nIf your application has a large business logic area and a \nlight UI layer,this is the right layer to do your automation.\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]],"start1":3337,"start2":3337,"length1":12,"length2":569}]],"length":3906,"saved":false}
{"ts":1351335866747,"patch":[[{"diffs":[[0,"n items."],[1,"\n\nTypes of Integration Testing: Big Bang, Top-Down and Bottom Up"],[0,"\n```\n\nPr"]],"start1":3337,"start2":3337,"length1":16,"length2":80}]],"length":3970,"saved":false}
{"ts":1351336153070,"patch":[[{"diffs":[[0,"ottom Up"],[1,"\n\nBig Bang: Developed Modules are coupled to form a complete a software system than tested\nCalled Usage Model testing\n\nTop-Down: The top integrated modules are tested and the branch of the module is tested step by step\n\nBottom-Up: The lowest level components are tested first, then used to facilitate \nthe testing of higher level components. The process is repeated until the component \nat the top of the hierarchy is tested."],[0,"\n```\n\nPr"]],"start1":3401,"start2":3401,"length1":16,"length2":441}]],"length":4395,"saved":false}
{"ts":1351336511116,"patch":[[{"diffs":[[0," by step"],[1,".\nIt's easier to find a missing branch in Top-Down Testing."],[0,"\n"],[-1,""],[0,"\nBottom-"]],"start1":3619,"start2":3619,"length1":17,"length2":76},{"diffs":[[0," tested."],[1," Easier to find bugs in Bottom-Up.\n\nSandwich Testing: is an approach to combine top down testing with bottom up testing."],[0,"\n```\n\nPr"]],"start1":3885,"start2":3885,"length1":16,"length2":136},{"diffs":[[0,"n.\n```\n\n"],[1,"Pros http://www.techrepublic.com/article/integration-testing-will-show-you-how-well-your-modules-get-along/1061716\n```php\nWe do integration testing because a set of modules that work fine individually rarely work together correctly the first time. \nThere are a variety of reasons:\n\n-Differences in the understanding of business requirements between multiple developers cause them to assume \ndifferent things should happen for the same test cases.\n\n-Fields are defined differently. For instance, one module assumes a field can hold 10 characters, \nwhile another module is programmed to hold 11.\n\n-There are different assumptions in field content. For example, one program expects a phone \nnumber to be 10 digits. Another expects the phone number to include the dashes.\n\n-The modules still have errors that were not uncovered in unit testing. Integration \ntesting may add new test cases, some of which may have been difficult to generate \nduring unit testing, that result in additional errors being uncovered.\n\n```"],[0,"\n\n\n\n\n\n\n\n"]],"start1":4553,"start2":4553,"length1":16,"length2":1028}]],"length":5586,"saved":false}
{"ts":1351337358427,"patch":[[{"diffs":[[0,".\n\n```\n\n"],[1,"Cons http://www.scribd.com/doc/14505504/20/Pros-and-Cons-of-top-down-integration-testing\n```php\nWriting stubs can be difficult: Stubs mustallow all possible conditions to be tested.\nPossibly a very large number of stubs maybe required, especially if the lowest level\nof the system contains many methods.\n\nTry to minimize the number of stubs and drivers\n\n```\n\nTesting Frameworks in PHP: Wiki\n```php\n\n-PHPUnit: Produces XML, HTML reports with code coverage\n\n-PHP Unit Testing Framework: It produces ASCII, XML or XHTML Output and runs from the command line.\n\n-SimpleTest: Unit test framework for both PHP and web.\n\n-lime: Sub-project of symfony\n\n-Apache-Test: PHP implementation of Test::More (test-more.php) Info\n\n-ojes: Documentation Driven Testing\n\n-SnapTest: SnapTest is a powerful unit testing framework for PHP 5+, \nleveraging PHP's unique runtime language to simplify the unit test \nprocess without sacrificing the agility tests provide.\n\n-OnionTest: Write an Onion! No coding needed just some txt files.\n\n-Enhance PHP: Unit testing framework with mocks and stubs built in. \nRuns in the command line or get HTML5, TAP or XML output via a web browser.\n\n-Atoum: A simple, modern and intuitive unit testing framework for PHP\n\n-Tester: PHP library for unit-testing (in console and browser), simplified variant of PHPUnit. \nWith ability to handle errors and exceptions in tests.\n\n-PhpInlineTest: PhpInlineTest - script to run inline tests for PHP functions and class methods.\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],[0,"\n\n\n\n\n\n\n\n"]],"start1":5567,"start2":5567,"length1":16,"length2":1510}]],"length":7080,"saved":false}
{"ts":1351337528197,"patch":[[{"diffs":[[0,"ethods.\n"],[1,"\nFramework for Integrated Test, or \"Fit\": is an open-source tool for automated customer tests. \nIt integrates the work of customers, analysts, testers, and developers.\n\n"],[0,"```\n\n\n\n\n"]],"start1":7043,"start2":7043,"length1":16,"length2":185}]],"length":7249,"saved":false}
{"ts":1351337976296,"patch":[[{"diffs":[[0,".\n\n```\n\n"],[1,"Extra credit:\n\nresearch difference between\n|| :  'or'\n&& : 'and'\n(check the PHP manuel)\n```php\n\n```\n\nresearch Superglobal Arrays - what are they?\n```php\nSuperglobals are built-in variables that are always available in all scopes.\nSeveral predefined variables in PHP are \"superglobals\", \nwhich means they are available in all scopes throughout a script. \nThere is no need to do global $variable; to access them within functions or methods.\n```\n"],[0,"\n\n\n\n\n\n\n\n"]],"start1":7217,"start2":7217,"length1":16,"length2":459}]],"length":7692,"saved":false}
{"ts":1351338523518,"patch":[[{"diffs":[[0,")\n```php"],[1,"\n\"&&\" has a greater precedence than \"and\"\n\n    The statement:\n    $g = true && false;\n\n    Is read as follows:\n    ($g = (true && false))\n\n    The staement:\n    $h = true and false;\n\n    Is read:\n    (($h = true) and false)\n\n\n\"||\" has a greater precedence than \"or\"\n    $e = false || true; \n\n    is read by the computer as\n\n    ($e = (false || true))\n\n    $f = false or true;\n    \n    is read by the computer as\n    \n    (($f = false) or true)"],[0,"\n\n```\n\nr"]],"start1":7311,"start2":7311,"length1":16,"length2":459}]],"length":8135,"saved":false}
