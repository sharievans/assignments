{"ts":1350129849142,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1350129860110,"patch":[[{"diffs":[[1,"## Homework 6.1: Follow the Arrows!\n\n* Use your upstream remote to pull homework-6.1.md into your workspace on Cloud9 (hint: git pull upstream master).\n \n* Find a section in your projects that has some decent looping and branching code: at least five branches that you can diagram.\n* Copy-paste your example into homework-6.1.md and attempt to identify the loop conditions with comments e.g. \n\n```php\nwhile ( $count < $max ) {\n// while $count is less than $max\n\nforeach ( $collection as $item ) {\n// until there are no more $items in the $collection\"\n```\n\n* Save your file locally, git add and git commit it (don't forget: -m 'explain why!'), and git push your changes to your Github account.\n* **Bonus points:** open a pull request back to the original repo.\n"]],"start1":0,"start2":0,"length1":0,"length2":760}]],"length":760,"saved":false}
{"ts":1350131237064,"patch":[[{"diffs":[[0,"l repo.\n"],[1,"\n\nsharievans/wordpress/wp-cron.php/72\n```php\nif ( $doing_cron_transient != $doing_wp_cron )\n    return;\n\nforeach ( $crons as $timestamp => $cronhooks ) { //loop 1\n\tif ( $timestamp > $gmt_time )\n\t\tbreak;\n\n\tforeach ( $cronhooks as $hook => $keys ) { // loop 2 to loop 1\n\n\t\tforeach ( $keys as $k => $v ) { // loop 3 to loop 2\n\n\t\t\t$schedule = $v['schedule'];\n\n\t\t\tif ( $schedule != false ) {\n\t\t\t\t$new_args = array($timestamp, $schedule, $hook, $v['args']);\n\t\t\t\tcall_user_func_array('wp_reschedule_event', $new_args);\n\t\t\t}\n\n\t\t\twp_unschedule_event( $timestamp, $hook, $v['args'] );\n\n \t\t\tdo_action_ref_array( $hook, $v['args'] );\n\n\t\t\t// If the hook ran too long and another cron process stole the lock, quit.\n\t\t\tif ( _get_cron_lock() != $doing_wp_cron )\n\t\t\t\treturn;\n\t\t}\n\t}\n}\n```"]],"start1":752,"start2":752,"length1":8,"length2":778}]],"length":1530,"saved":false}
